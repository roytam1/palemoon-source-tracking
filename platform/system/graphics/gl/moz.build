# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

gl_provider = 'Null'

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    gl_provider = 'WGL'
elif 'gtk' in CONFIG['MOZ_WIDGET_TOOLKIT']:
    if CONFIG['MOZ_EGL_XRENDER_COMPOSITE']:
        gl_provider = 'EGL'
    else:
        gl_provider = 'GLX'

if CONFIG['MOZ_GL_PROVIDER']:
    gl_provider = CONFIG['MOZ_GL_PROVIDER']

EXPORTS += [
    'DecomposeIntoNoRepeatTriangles.h',
    'EGLUtils.h',
    'GfxTexturesReporter.h',
    'GLBlitHelper.h',
    'GLConsts.h',
    'GLContext.h',
    'GLContextEGL.h',
    'GLContextProvider.h',
    'GLContextProviderImpl.h',
    'GLContextSymbols.h',
    'GLContextTypes.h',
    'GLDefs.h',
    'GLLibraryEGL.h',
    'GLLibraryLoader.h',
    'GLReadTexImageHelper.h',
    'GLScreenBuffer.h',
    'GLTextureImage.h',
    'GLTypes.h',
    'GLUploadHelpers.h',
    'HeapCopyOfStackArray.h',
    'ScopedGLHelpers.h',
    'SharedSurface.h',
    'SharedSurfaceEGL.h',
    'SharedSurfaceGL.h',
    'SurfaceTypes.h',
    'TextureGarbageBin.h',
]

if CONFIG['MOZ_X11']:
    EXPORTS += [
        'GLContextGLX.h',
        'GLXLibrary.h',
    ]

# Win32 is a special snowflake, for ANGLE
if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    EXPORTS += [
        'GLContextWGL.h',
        'SharedSurfaceANGLE.h', # Needs <windows.h> for `HANDLE`.
        'SharedSurfaceD3D11Interop.h',
        'WGLLibrary.h',
    ]
    SOURCES += [
        'GLContextProviderWGL.cpp',
        'SharedSurfaceANGLE.cpp',
        'SharedSurfaceD3D11Interop.cpp',
    ]
if CONFIG['MOZ_ENABLE_SKIA_GPU']:
    EXPORTS += ['SkiaGLGlue.h']
    SOURCES += [
        'SkiaGLGlue.cpp',
    ]
    if CONFIG['CLANG_CXX']:
        # Suppress warnings from Skia header files.
        SOURCES['SkiaGLGlue.cpp'].flags += ['-Wno-implicit-fallthrough']

if gl_provider == 'GLX':
    # GLContextProviderGLX.cpp needs to be kept out of UNIFIED_SOURCES
    # as it includes X11 headers which cause conflicts.
    SOURCES += [
        'GLContextProviderGLX.cpp',
        'SharedSurfaceGLX.cpp'
    ]
    EXPORTS += [
        'SharedSurfaceGLX.h'
    ]

SOURCES += [
    'DecomposeIntoNoRepeatTriangles.cpp',
    'EGLUtils.cpp',
    'GfxTexturesReporter.cpp',
    'GLBlitHelper.cpp',
    'GLContext.cpp',
    'GLContextFeatures.cpp',
    'GLContextProviderEGL.cpp',
    'GLContextTypes.cpp',
    'GLDebugUtils.cpp',
    'GLLibraryEGL.cpp',
    'GLLibraryLoader.cpp',
    'GLReadTexImageHelper.cpp',
    'GLScreenBuffer.cpp',
    'GLTextureImage.cpp',
    'GLUploadHelpers.cpp',
    'ScopedGLHelpers.cpp',
    'SharedSurface.cpp',
    'SharedSurfaceEGL.cpp',
    'SharedSurfaceGL.cpp',
    'SurfaceTypes.cpp',
    'TextureGarbageBin.cpp',
    'TextureImageEGL.cpp',
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'

if CONFIG['MOZ_D3DCOMPILER_VISTA_DLL']:
    DEFINES['MOZ_D3DCOMPILER_VISTA_DLL'] = CONFIG['MOZ_D3DCOMPILER_VISTA_DLL']

CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
CXXFLAGS += CONFIG['TK_CFLAGS']
CFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
CFLAGS += CONFIG['TK_CFLAGS']

LOCAL_INCLUDES += CONFIG['SKIA_INCLUDES']

if CONFIG['GNU_CXX']:
    CXXFLAGS += ['-Wno-error=shadow']
